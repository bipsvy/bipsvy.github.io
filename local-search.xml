<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo+Github</title>
    <link href="/2021/11/26/Hexo+Github/"/>
    <url>/2021/11/26/Hexo+Github/</url>
    
    <content type="html"><![CDATA[<p>啥时候写的？：2021-11-22</p><p>用的啥环境？：Win7 64位 企业版 SP1</p><p>谁写的？：bipsvy</p><p>为了防止最新版本的软件不支持 win7 的环境，各软件尽量用2018年下半年的 release 版本。</p><h2 id="痛点（需求是啥？）"><a href="#痛点（需求是啥？）" class="headerlink" title="痛点（需求是啥？）"></a>痛点（需求是啥？）</h2><h2 id="技术选型（为啥选这个？）"><a href="#技术选型（为啥选这个？）" class="headerlink" title="技术选型（为啥选这个？）"></a>技术选型（为啥选这个？）</h2><h2 id="步骤（怎么搞？）"><a href="#步骤（怎么搞？）" class="headerlink" title="步骤（怎么搞？）"></a>步骤（怎么搞？）</h2><h3 id="0-准备工作"><a href="#0-准备工作" class="headerlink" title="0 准备工作"></a>0 准备工作</h3><ol><li><p>需要一个 Github 帐号  <a href="https://www.github.com/">Github官网地址</a></p></li><li><p>瞅瞅hexo官方文档  <a href="https://hexo.io/zh-cn/docs/">hexo官方文档地址</a><br>需要 Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本</p></li></ol><h3 id="1-下载并安装-Git-（Git-2-19-0-64-bit-exe-版本）"><a href="#1-下载并安装-Git-（Git-2-19-0-64-bit-exe-版本）" class="headerlink" title="1 下载并安装 Git （Git-2.19.0-64-bit.exe 版本）"></a>1 下载并安装 Git （Git-2.19.0-64-bit.exe 版本）</h3><p><a href="https://github.com/git-for-windows/git/releases">Git 在 Github 中的 release 页面</a></p><ol><li><p>双击git的安装程序，开始安装。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111221649965.png" alt="image-20211122164947815"></p></li><li><p>选择安装路径，默认。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111221653025.png" alt="image-20211122165340953"></p></li><li><p>添加桌面快捷方式，不使用 TrueType 字体，不检查更新。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111221655620.png" alt="image-20211122165504739"></p></li><li><p>创建开始菜单，默认。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111221656368.png" alt="image-20211122165626203"></p></li><li><p>选择 Git 文件默认编辑器，默认使用 Vim。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111221657348.png" alt="image-20211122165740102"></p></li><li><p>从命令行以及第三方软件进行 Git，默认。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111221658120.png" alt="image-20211122165858807"></p></li><li><p>使用 OpenSSL 库进行 HTTPS 后端传输，默认。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111221700071.png" alt="image-20211122170058786"></p></li><li><p>配置行尾符号转换，默认。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111221701799.png" alt="image-20211122170140302"></p></li><li><p>配置终端模拟器以与Git Bash一起使用，默认。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111221706424.png" alt="image-20211122170637353"></p></li><li><p>配置额外的选项，启用文件系统缓存，启用 Git 凭证管理器，默认。</p><p>  <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111221707367.png" alt="image-20211122170759224"></p></li><li><p>配置实验选项，默认都不勾选。</p><p>  <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111221709092.png" alt="image-20211122170950781"></p></li><li><p>Install 安装。</p><p>  <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111221710182.png" alt="image-20211122171029987"></p></li><li><p>安装完成，运行 Git Bash，不查看 Release 说明。</p><p>  <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111221711141.png" alt="image-20211122171155972"></p></li><li><p>查看 git 版本，安装成功。</p><p>  <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111221714334.png" alt="image-20211122171406276"></p></li></ol><h3 id="2-下载并安装-node-js-（node-v12-3-0-x64-msi-版本）"><a href="#2-下载并安装-node-js-（node-v12-3-0-x64-msi-版本）" class="headerlink" title="2 下载并安装 node.js （node-v12.3.0-x64.msi 版本）"></a>2 下载并安装 node.js （node-v12.3.0-x64.msi 版本）</h3><p><a href="https://nodejs.org/download/release/">Node.js 官网下载地址</a></p><ol><li><p>双击 node 的安装程序，开始安装。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111231100957.png" alt="image-20211123110053156"></p></li><li><p>同意许可。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111231104416.png" alt="image-20211123110411247"></p></li><li><p>选择安装路径，默认。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111231104359.png" alt="image-20211123110452779"></p></li><li><p>选择要安装的功能：Node.js运行时环境，npm包管理器，在线文档图标，添加到PATH环境变量，默认都选择。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111231107931.png" alt="image-20211123110720525"></p></li><li><p>本机模块工具，默认不安装。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111231216863.png" alt="image-20211123121602686"></p></li><li><p>Install 安装</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111231110512.png" alt="image-20211123111034329"></p></li><li><p>安装完成</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111231111102.png" alt="image-20211123111125847"></p></li><li><p>查看 node 版本和 npm 版本，安装成功。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111231645310.png" alt="image-20211123164540188"></p></li><li><p>换 npm 源。</p><p>   用 npm 默认源进行安装经常出现速度慢而导致无法正常安装，解决办法就是修改 npm 安装源，这里选择淘宝 npm 镜像代替官方版本，同步频率目前为 10分钟 一次。</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 查看 npm 源</span><br>npm config get registry<br><span class="hljs-comment"># 设置为淘宝镜像源</span><br>npm config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/202111231653038.png" alt="image-20211123165329587"></p></li></ol><h3 id="3-安装并本地运行-Hexo"><a href="#3-安装并本地运行-Hexo" class="headerlink" title="3 安装并本地运行 Hexo"></a>3 安装并本地运行 Hexo</h3><ol><li><p>新建文件夹并进入，右键 Git Bash Here。</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 安装 Hexo</span><br>npm install -g hexo-cli<br><span class="hljs-comment"># 查看版本</span><br>hexo-cli -v<br></code></pre></td></tr></table></figure><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/20211124153231.png" alt="20211124153231"></p><p>   现在只是安装了 hexo-cli，并没有安装 hexo，并且现在这个文件夹里也没有任何东西。但是下一步初始化的时候会将初始化文件放到这个文件夹里，索性这一步就提前创建好文件夹，省得再去切换。</p></li><li><p>初始化博客文件夹。</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 初始化文件夹</span><br>hexo init<br></code></pre></td></tr></table></figure><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/20211124155411.png" alt="20211124155411"></p><p>   现在这个文件夹里就生成了一些文件。并安装了 hexo。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/20211124155635.png" alt="20211124155635"></p></li><li><p>通过 npm 安装 hexo 对 package.json 的依赖模块。</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">npm install<br>或<br>npm i<br></code></pre></td></tr></table></figure><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/20211124161005.png" alt="20211124161005"></p><p>   有好几个模块因为需要其他的依赖而没有安装成功，暂时忽略。</p></li><li><p>生成静态页面</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 生成静态页面</span><br>hexo generate<br>或<br>hexo g<br></code></pre></td></tr></table></figure><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/20211124162621.png" alt="20211124162621"></p><p>   此时在该博客文件夹里生成了一个 public 文件夹，里边存放了刚刚生成的静态页面。</p></li><li><p>启动本地服务器。</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 启动本地服务器</span><br>hexo server<br>或<br>hexo s<br></code></pre></td></tr></table></figure><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/20211124162908.png" alt="20211124162908"></p></li><li><p>本地访问，默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/20211124164221.png" alt="20211124164221"></p><p>   Hexo已经在本地运行成功。</p></li></ol><h3 id="5-部署到-Github"><a href="#5-部署到-Github" class="headerlink" title="5 部署到 Github"></a>5 部署到 Github</h3><ol><li><p>新建一个仓库，格式为： <code>Github用户名.github.io</code> ，如我的仓库名： <code>bipsvy.github.io</code> 。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/20211124224556.png" alt="20211124224556"></p><p>   Description 对此仓库的描述（可以不写）；此仓库必须为 public 公开仓库；添加一个 README 文件（可以不勾选）。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/20211124231701.png" alt="20211124231701"></p></li><li><p>建立此仓库成功后就可以外网访问 Github Pages 页面。地址为仓库名。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/20211124232412.png" alt="20211124232412"></p></li><li><p>获取此仓库的 git 地址，常用的有 HTTPS 和 SSH 两种 git 方式。使用 HTTPS 方式需要在第一次提交代码时配置 <code>user.email</code> 和 <code>user.name</code> ，并且每次都要验证身份；使用 SSH 方式需要在第一次提交代码时先在本地生成一组密钥，然后将公钥复制到 Github 的 settings/profile 下。每次提交时不需要再验证身份。当换了本地设备时需要重新生成一对新环境的密钥并将公钥加入到 Github 中。本次使用 HTTPS 方式。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/20211124234644.png" alt="20211124234644"></p></li><li><p>配置 Hexo 的 <code>_config.yml</code> 文件。</p><p>   将上一步复制的 git 地址添加到 <code>_config.yml</code> 文件中（文件最后位置），具体为：</p>   <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repository:</span> <span class="hljs-string">https://github.com/bipsvy/bipsvy.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br></code></pre></td></tr></table></figure></li><li><p>安装 Hexo 到 Github 的部署插件。（因为我的 npm 版本大于 5.0.0 ，不需要添加 –save 参数手动修改 package.json 文件）</p>   <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-string">npm</span> <span class="hljs-string">install</span> <span class="hljs-string">hexo-deployer-git</span><br></code></pre></td></tr></table></figure><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/20211124235819.png" alt="20211124235819"></p></li><li><p>设置 git 全局的 <code>user.email</code> 和 <code>user.name</code> 用来标识 git push 时的人员名字和邮箱。</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">git config --global user.email <span class="hljs-string">&quot;你的邮箱&quot;</span><br>git config --global user.name <span class="hljs-string">&quot;你的名字&quot;</span><br></code></pre></td></tr></table></figure><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/20211125092454.png" alt="20211125092454"></p></li><li><p>将 Hexo 生成的静态页面部署到 Github 中，替换掉原来 Github Pages 中的 Markdown 文件内容。</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 部署</span><br>hexo depoly<br>或<br>hexo d<br></code></pre></td></tr></table></figure><p>   如果出现 <code>fatal: unable to access &#39;git提交地址&#39;: OpenSSL SSL_connect: SSL_ERROR_SYSCALL in connection to github.com:443</code> 报错，可以设置一下代理（自备TiZi）。</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 查看配置信息</span><br>git config -l --global<br><span class="hljs-comment"># 设置代理</span><br>git config --global http.proxy <span class="hljs-string">&quot;http://127.0.0.1:1080&quot;</span><br>git config --global https.proxy <span class="hljs-string">&quot;https://127.0.0.1:1080&quot;</span><br><span class="hljs-comment"># 清除代理</span><br>git config --global --<span class="hljs-built_in">unset</span> http.proxy<br>git config --global --<span class="hljs-built_in">unset</span> https.proxy<br></code></pre></td></tr></table></figure><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/20211125094901.png" alt="20211125094901"></p><p>   如果是在 2021年8月13号之后进行 git ，输入用户名和密码后会报错。 <code>从 2021 年 8 月 13 日开始，我们将在对 Git 操作进行身份验证时不再接受帐户密码，并将要求使用基于令牌（token）的身份验证，例如个人访问令牌（针对开发人员）或 OAuth 或 GitHub 应用程序安装令牌（针对集成商） GitHub.com 上所有经过身份验证的 Git 操作。 您也可以继续在您喜欢的地方使用 SSH 密钥。</code> 在登录时将密码换为 Token 即可。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/20211125101957.png" alt="20211125101957"></p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/20211125102726.png" alt="20211125102726"></p></li><li><p>查看替换为 Hexo 文件的 Github Pages。</p><p>   <img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/20211125105356.png" alt="20211125105356"></p><p>   此时已上传成功，可以通过此地址在外网访问。</p></li></ol><h3 id="6-小结"><a href="#6-小结" class="headerlink" title="6 小结"></a>6 小结</h3><p>将 Hexo 部署到 <code>Github用户名.github.io</code> 仓库中后，查看此仓库内容。</p><p><img src="https://raw.githubusercontent.com/bipsvy/PictureObjectRepository02/main/img/20211125111104.png" alt="20211125111104"></p><p>可见通过 <code>hexo d</code> 部署命令只会把生成的 public 文件夹下的静态文件上传到仓库中。所以也可以直接使用 <code>git push</code> 命令将 public 文件夹下的文件传到仓库中。</p><h2 id="未解决（还有哪些瑕疵？）"><a href="#未解决（还有哪些瑕疵？）" class="headerlink" title="未解决（还有哪些瑕疵？）"></a>未解决（还有哪些瑕疵？）</h2><ul><li><p>默认主题不好看</p></li><li><p>想要加上图片阴影，代码块样式，目录等</p></li><li><p>如何在博客里创建一篇新文章</p></li><li><p>如何对一篇博客加密 参考 <code>hexo-blog-encrypt 插件</code></p></li><li><p>每次修改文档后都要重新清除静态页面并重新部署，有点麻烦</p></li><li><p>github仓库里存放的只是 public 文件夹下的静态页面文件，源码只在本地保存，为了更方便的操作 Hexo ，也为了数据备份的需求，想要将源码放入github仓库中，但是源码文件中包含一些配置信息，如果被公开，所做的博客加密工作也会失去作用，所以可否将源码提交到私有仓库内。</p></li><li><p>每次提交都要验证身份，有点麻烦</p></li><li><p>解决方法：利用 Github Actions 持续集成。<a href="https://www.cnblogs.com/deppwang/p/12326906.html">参考</a></p></li></ul><hr><p>感谢前人栽树。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/11/24/hello-world/"/>
    <url>/2021/11/24/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
